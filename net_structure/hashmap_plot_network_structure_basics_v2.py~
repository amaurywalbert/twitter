# -*- coding: latin1 -*-
################################################################################################
#	
#
import snap, datetime, sys, time, json, os, os.path, shutil, time, random, math
# Script auxiliar para gerar histogramas
import scatter
reload(sys)
sys.setdefaultencoding('utf-8')

######################################################################################################################################################################
##		Status - Versão 1 - Script para gerar dados estatísticos para as redes-ego
## 
######################################################################################################################################################################

######################################################################################################################################################################
#
# Carregar os dados as propriedades do dataset
#
######################################################################################################################################################################
def prepare(source_dir):
	print("\n######################################################################\n")

	for i in range(1,11):
		net="n"+str(i)
		if os.path.isfile(source_dir+net+"_net_struct_basics.json"):
			with open(source_dir+net+"_net_struct_basics.json", 'r') as f:

				data = json.load(f)
				scatter.prepare(data['nodes'],data['edges'],output_scatter,net)
				histogram_nodes_edges.prepare(data['nodes'],data['edges'],output_hist,net)	
				
	print("\n######################################################################\n")

######################################################################################################################################################################
######################################################################################################################################################################
#
# Método principal do programa. 
#
######################################################################################################################################################################
######################################################################################################################################################################
def main():
	os.system('clear')
	print "################################################################################"
	print"																											"
	print" Script para apresentação de propriedades do dataset (rede-ego)							"
	print"																											"
	print"#################################################################################"
	print
	
	source_dir1 = "/home/amaury/Dropbox/net_structure_hashmap/snap/graphs_with_ego/"
						
					
	data1 = prepare(source_dir1)
	
	source_dir2 = "/home/amaury/Dropbox/net_structure_hashmap/snap/graphs_with_ego/"
	
	data2 = prepare(source_dir2)
	
######################################################################
######################################################################		

	print("\n######################################################################\n")
	print("Script finalizado!")
	print("\n######################################################################\n")

######################################################################################################################################################################
#
# INÍCIO DO PROGRAMA
#
######################################################################################################################################################################

output_scatter = "/home/amaury/Dropbox/net_structure_hashmap_statistics/snap/scatter/"
output_hist = "/home/amaury/Dropbox/net_structure_hashmap_statistics/snap/histogram/"


#Executa o método main
if __name__ == "__main__": main()